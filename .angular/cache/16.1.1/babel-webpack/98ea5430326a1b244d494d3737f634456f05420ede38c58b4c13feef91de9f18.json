{"ast":null,"code":"import { of } from 'rxjs';\nimport { HEROES } from './mock-heroes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./message.service\";\nexport class HeroService {\n  constructor(messageService) {\n    this.messageService = messageService;\n  }\n  getHeroes() {\n    // TODO: send the message _after_ fetching the heroes\n    this.messageService.add('HeroService: fetched heroes');\n    return of(HEROES);\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.MessageService));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["of","HEROES","HeroService","constructor","messageService","getHeroes","add","i0","ɵɵinject","i1","MessageService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\437\\angular-tour-of-heroes\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n \nimport { Observable, of } from 'rxjs';\n \nimport { Hero } from './hero';\nimport { HEROES } from './mock-heroes';\nimport { MessageService } from './message.service';\n \n@Injectable({\n  providedIn: 'root',\n})\nexport class HeroService {\n \n  constructor(private messageService: MessageService) { }\n \n  getHeroes(): Observable<Hero[]> {\n    // TODO: send the message _after_ fetching the heroes\n    this.messageService.add('HeroService: fetched heroes');\n    return of(HEROES);\n  }\n}"],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;AAGrC,SAASC,MAAM,QAAQ,eAAe;;;AAMtC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAoB;EAEtDC,SAASA,CAAA;IACP;IACA,IAAI,CAACD,cAAc,CAACE,GAAG,CAAC,6BAA6B,CAAC;IACtD,OAAON,EAAE,CAACC,MAAM,CAAC;EACnB;;AARWC,WAAW,C;mBAAXA,WAAW,EAAAK,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAXR,WAAW,C;SAAXA,WAAW;EAAAS,OAAA,EAAXT,WAAW,CAAAU,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}