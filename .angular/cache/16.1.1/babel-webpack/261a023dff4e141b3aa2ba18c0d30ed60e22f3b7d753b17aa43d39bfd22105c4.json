{"ast":null,"code":"import { of } from 'rxjs';\nimport { HEROES } from './mock-heroes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./message.service\";\nexport class HeroService {\n  constructor(messageService) {\n    this.messageService = messageService;\n  }\n  getHeroes() {\n    // TODO: send the message _after_ fetching the heroes\n    this.messageService.add('HeroService: fetched heroes');\n    return of(HEROES);\n  }\n  getHero(id) {\n    const hero = HEROES.find(h => h.id == id);\n    this.messageService.add(`We grabbed hero with id of ${id}`);\n    return of(hero);\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.MessageService));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["of","HEROES","HeroService","constructor","messageService","getHeroes","add","getHero","id","hero","find","h","i0","ɵɵinject","i1","MessageService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\437\\angular-tour-of-heroes\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\n\nimport { Hero } from './hero';\nimport { HEROES } from './mock-heroes';\nimport { MessageService } from './message.service';\n\n@Injectable({ providedIn: 'root' })\nexport class HeroService {\n\n  constructor(private messageService: MessageService) { }\n\n  getHeroes(): Observable<Hero[]> {\n    // TODO: send the message _after_ fetching the heroes\n    this.messageService.add('HeroService: fetched heroes');\n    return of(HEROES);\n  }\n\n  getHero(id: number): Observable<Hero> {\n    const hero = HEROES.find(h => h.id == id)!;\n    this.messageService.add(`We grabbed hero with id of ${id}`);\n    return of(hero);\n  }\n\n\n} "],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;AAGrC,SAASC,MAAM,QAAQ,eAAe;;;AAItC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAoB;EAEtDC,SAASA,CAAA;IACP;IACA,IAAI,CAACD,cAAc,CAACE,GAAG,CAAC,6BAA6B,CAAC;IACtD,OAAON,EAAE,CAACC,MAAM,CAAC;EACnB;EAEAM,OAAOA,CAACC,EAAU;IAChB,MAAMC,IAAI,GAAGR,MAAM,CAACS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,IAAIA,EAAE,CAAE;IAC1C,IAAI,CAACJ,cAAc,CAACE,GAAG,CAAC,8BAA8BE,EAAE,EAAE,CAAC;IAC3D,OAAOR,EAAE,CAACS,IAAI,CAAC;EACjB;;AAdWP,WAAW,C;mBAAXA,WAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAXb,WAAW,C;SAAXA,WAAW;EAAAc,OAAA,EAAXd,WAAW,CAAAe,IAAA;EAAAC,UAAA,EADE;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}